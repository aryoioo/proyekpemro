name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4.33'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Show .env file
      run: cat .env

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Configure Database
      run: |
        php artisan config:cache
        php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: test_db
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_HOST: 127.0.0.1

    - name: Give execute permission to phpunit
      run: chmod +x vendor/bin/phpunit

    - name: Run Tests
      run: vendor/bin/phpunit --testdox

  deploy:
    runs-on: ubuntu-latest
    needs: laravel-tests
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4.33'

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev

    - name: Deploy to Production
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        SERVER_DOMAIN: ${{ secrets.SERVER_DOMAIN }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PATH: ${{ secrets.SERVER_PATH }}
      run: |
        echo "${{ secrets.DEPLOY_KEY }}" > deploy_key
        chmod 600 deploy_key
        ssh -i deploy_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_DOMAIN }} << 'EOF'
          cd ${{ secrets.SERVER_PATH }}
          git pull origin main
          composer install --prefer-dist --no-dev --no-scripts --no-progress --no-suggest
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan storage:link
          sudo systemctl restart php-fpm
          sudo systemctl restart nginx
        EOF
        rm deploy_key
